diff --git a/.idea/gradle.xml b/.idea/gradle.xml
index d291b3d..5cd135a 100644
--- a/.idea/gradle.xml
+++ b/.idea/gradle.xml
@@ -1,15 +1,19 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
-        <compositeConfiguration>
-          <compositeBuild compositeDefinitionSource="SCRIPT" />
-        </compositeConfiguration>
+        <option name="testRunner" value="PLATFORM" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="modules">
+          <set>
+            <option value="$PROJECT_DIR$" />
+            <option value="$PROJECT_DIR$/app" />
+          </set>
+        </option>
         <option name="resolveModulePerSourceSet" value="false" />
-        <option name="testRunner" value="PLATFORM" />
       </GradleProjectSettings>
     </option>
   </component>
diff --git a/.idea/misc.xml b/.idea/misc.xml
index 37a7509..687d49e 100644
--- a/.idea/misc.xml
+++ b/.idea/misc.xml
@@ -1,6 +1,45 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="NullableNotNullManager">
+    <option name="myDefaultNullable" value="org.jetbrains.annotations.Nullable" />
+    <option name="myDefaultNotNull" value="androidx.annotation.NonNull" />
+    <option name="myNullables">
+      <value>
+        <list size="12">
+          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.Nullable" />
+          <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nullable" />
+          <item index="2" class="java.lang.String" itemvalue="javax.annotation.CheckForNull" />
+          <item index="3" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.Nullable" />
+          <item index="4" class="java.lang.String" itemvalue="android.support.annotation.Nullable" />
+          <item index="5" class="java.lang.String" itemvalue="androidx.annotation.Nullable" />
+          <item index="6" class="java.lang.String" itemvalue="android.annotation.Nullable" />
+          <item index="7" class="java.lang.String" itemvalue="androidx.annotation.RecentlyNullable" />
+          <item index="8" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.qual.Nullable" />
+          <item index="9" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NullableDecl" />
+          <item index="10" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NullableType" />
+          <item index="11" class="java.lang.String" itemvalue="com.android.annotations.Nullable" />
+        </list>
+      </value>
+    </option>
+    <option name="myNotNulls">
+      <value>
+        <list size="11">
+          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.NotNull" />
+          <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nonnull" />
+          <item index="2" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.NonNull" />
+          <item index="3" class="java.lang.String" itemvalue="android.support.annotation.NonNull" />
+          <item index="4" class="java.lang.String" itemvalue="androidx.annotation.NonNull" />
+          <item index="5" class="java.lang.String" itemvalue="android.annotation.NonNull" />
+          <item index="6" class="java.lang.String" itemvalue="androidx.annotation.RecentlyNonNull" />
+          <item index="7" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.qual.NonNull" />
+          <item index="8" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NonNullDecl" />
+          <item index="9" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NonNullType" />
+          <item index="10" class="java.lang.String" itemvalue="com.android.annotations.NonNull" />
+        </list>
+      </value>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
diff --git a/app/build.gradle b/app/build.gradle
index 5765c5d..4f68acb 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -17,6 +17,10 @@ android {
             proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
         }
     }
+    compileOptions {
+        targetCompatibility = "8"
+        sourceCompatibility = "8"
+    }
 }
 
 dependencies {
diff --git a/app/src/main/java/com/lousssouarn/edouard/mareu/controler/ListMeetingActivity.java b/app/src/main/java/com/lousssouarn/edouard/mareu/controler/ListMeetingActivity.java
index e09a4e0..95d10a5 100644
--- a/app/src/main/java/com/lousssouarn/edouard/mareu/controler/ListMeetingActivity.java
+++ b/app/src/main/java/com/lousssouarn/edouard/mareu/controler/ListMeetingActivity.java
@@ -10,6 +10,7 @@ import android.os.Bundle;
 import android.view.Menu;
 
 import com.lousssouarn.edouard.mareu.R;
+import com.lousssouarn.edouard.mareu.di.DI;
 import com.lousssouarn.edouard.mareu.model.Meeting;
 import com.lousssouarn.edouard.mareu.service.MeetingApiService;
 import com.lousssouarn.edouard.mareu.views.MeetingRecyclerViewAdapter;
@@ -17,6 +18,7 @@ import com.lousssouarn.edouard.mareu.views.MeetingRecyclerViewAdapter;
 import java.util.List;
 
 import butterknife.BindView;
+import butterknife.ButterKnife;
 
 public class ListMeetingActivity extends AppCompatActivity {
 
@@ -36,6 +38,10 @@ public class ListMeetingActivity extends AppCompatActivity {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_list_meeting);
 
+        ButterKnife.bind(this);
+        mApiService = DI.getMeetingApiService();
+
+
         setSupportActionBar(mToolbar);
         ActionBar actionBar = getSupportActionBar();
 
diff --git a/app/src/main/java/com/lousssouarn/edouard/mareu/views/MeetingRecyclerViewAdapter.java b/app/src/main/java/com/lousssouarn/edouard/mareu/views/MeetingRecyclerViewAdapter.java
index c6fd3a5..c0ec580 100644
--- a/app/src/main/java/com/lousssouarn/edouard/mareu/views/MeetingRecyclerViewAdapter.java
+++ b/app/src/main/java/com/lousssouarn/edouard/mareu/views/MeetingRecyclerViewAdapter.java
@@ -7,6 +7,8 @@ import android.widget.ImageButton;
 import android.widget.ImageView;
 import android.widget.TextView;
 
+import androidx.annotation.NonNull;
+import androidx.appcompat.widget.AppCompatImageView;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.lousssouarn.edouard.mareu.R;
@@ -28,6 +30,7 @@ public class MeetingRecyclerViewAdapter extends RecyclerView.Adapter<MeetingRecy
     }
 
     @Override
+    @NonNull
     public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
         View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.meeting, parent, false);
         return new ViewHolder(view);
@@ -42,33 +45,32 @@ public class MeetingRecyclerViewAdapter extends RecyclerView.Adapter<MeetingRecy
     public int getItemCount() {
         return mMeetings.size();
     }
-    //ViewHolder
-    public class ViewHolder extends RecyclerView.ViewHolder{
-            @BindView(R.id.item_room_color)
-            public ImageView mRoomColor;
-            @BindView(R.id.item_subject)
-            public TextView mSubject;
-            @BindView(R.id.item_time)
-            public  TextView mTime;
-            @BindView(R.id.item_room)
-            public TextView mRoomName;
-            @BindView(R.id.item_participants)
-            public TextView mParticipants;
-            @BindView(R.id.item_delete_button)
-            public ImageButton mDeleteButton;
-
-
-            public ViewHolder(View view) {
+
+
+    public static class ViewHolder extends RecyclerView.ViewHolder{
+        public AppCompatImageView mRoomColor;
+        public TextView mSubject;
+        public  TextView mTime;
+        public TextView mRoomName;
+        public TextView mParticipants;
+        public ImageButton mDeleteButton;
+
+        public ViewHolder(View view) {
             super(view);
-            ButterKnife.bind(this, view);
+            mRoomColor = view.findViewById(R.id.item_room_color);
+            mSubject = view.findViewById(R.id.item_subject);
+            mTime = view.findViewById(R.id.item_time);
+            mRoomName = view.findViewById(R.id.item_room);
+            mParticipants = view.findViewById(R.id.item_participants);
+            mDeleteButton = view.findViewById(R.id.item_delete_button);
         }
-        void display(Meeting meeting){
-                mRoomColor.setColorFilter(meeting.getColor());
-                mSubject.setText(meeting.getSubject());
-                mTime.setText(meeting.getTime());
-                mRoomName.setText(meeting.getRoomName());
-                mParticipants.setText(meeting.getParticipants());
 
+        void display(Meeting meeting){
+            mRoomColor.setColorFilter(meeting.getColor());
+            mSubject.setText(meeting.getSubject());
+            mTime.setText(meeting.getTime());
+            mRoomName.setText(meeting.getRoomName());
+            mParticipants.setText(meeting.getParticipants());
         }
 
     }
